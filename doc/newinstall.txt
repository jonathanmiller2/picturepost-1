System Setup
====================================

# Instructions for RHEL 7/Scientific Linux 7

# install OS dependencies
yum install -y epel-release
sudo yum -y install git httpd ant tomcat-webapps postgresql-jdbc perl-DBD-Pg perl-Digest-SHA postgis2_94 postgis2_94-client postgis2_94-utils ImageMagick pgbouncer

#We didn't install pgbouncer, it seems to be gone  
http://serverautocom.blogspot.com/2017/06/how-to-install-pgbouncer-on-centos-6.html  
Add RPM from here? https://yum.postgresql.org/repopackages.php  

#Unsure of this
sudo yum -y install postgis postgis-utils 

#This may not be needed
sudo yum -y install postgresql-server postgresql-contrib

#Set up locate command (optional)
sudo yum -y install git mlocate
sudo updatedb

# initialize postgres database
# (paths differs depending on postgres version)
sudo postgresql-setup initdb


# Enable postgres user/password auth
sudo vim /var/lib/pgsql/data/pg_hba.conf

# change line:
host    all         all         127.0.0.1/32          ident
# To:
host    all         all         127.0.0.1/32          trust

# ensure postgres starts on boot
sudo systemctl enable postgresql
sudo systemctl enable tomcat
sudo systemctl enable httpd
sudo systemctl enable pgbouncer.service #How do we install pgbouncer???

# open firewall for httpd and tomcat
sudo firewall-cmd --zone=public --add-port=80/tcp --permanent
sudo firewall-cmd --zone=public --add-port=8080/tcp --permanent
sudo firewall-cmd --reload



# start postgres
sudo systemctl restart postgresql

# set a password for postgres user
sudo -u postgres psql -c "ALTER USER postgres WITH PASSWORD 'postgres';" postgres

# note: httpd_use_nfs=true because photos and satellite imagery may be on NFS mount
sudo setsebool -P httpd_builtin_scripting=true httpd_can_network_connect=true httpd_can_network_connect_db=true httpd_can_sendmail=true httpd_enable_cgi=true httpd_use_nfs=true


Create a picturepost instance
====================================
cd /opt

#Clone the github repo
git clone https://github.com/jonathanmiller2/picturepost-1/

# set up new tomcat virtual host
vi /usr/share/tomcat/conf/server.xml 
  <Host name="picturepost.ou.edu" appBase="/opt/picturepost/webapps">
        <Context docBase="ROOT" path="" allowLinking="true">
          <Parameter name="BASE_PATH" value="/opt/picturepost" />
        </Context>
      </Host>

  <!-- verify Connector has a large maxPostSize (otherwise large photo uploads won't work)
  <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" maxPostSize="20971520" />


# go into project directory
cd /opt/picturepost

# execute setup and follow instructions to create a config file
#    **** IGNORE ERROR REGARDING FAILED DATABASE CONNECTION
sudo bin/picpost setup

# You will need to install data and a database
# If you want to develop on a fresh database with no data, use the starter database
cd /opt/picturepost
cp src/starter_database.sql.gz data/backup.sql.gz
bin/picpost restore

# OR if you want a copy of the live data (you need ~ 80G free space)
rsync -av picturepost.unh.edu:/opt/picturepost/data data/

# run command to restore database from data/backup.sql.gz
bin/picpost restore

# configure bgbouncer connection pooling
cd /etc/pgbouncer
vi pgbouncer.ini

# add connection
picturepost = host=127.0.0.1 port=5432 user=dbuser client_encoding=UNICODE datestyle=ISO connect_query='SELECT 1'

# uncomment this line
ignore_startup_parameters = extra_float_digits

# save file


# MDL added following so that mkauth.py can be run
# sudo yum install python-psycopg2

# add userlist file
python mkauth.py userlist.txt "host=127.0.0.1 dbname=postgres user=postgres"
chown pgbouncer userlist.txt

# restart the services
sudo systemctl restart pgbouncer.service

# test pgbouncer connection
psql -h 127.0.0.1 -p 6432 -U dbuser picturepost

# run setup again to complete the setup process
# this will also build java files, restart tomcat, restart apache
/opt/picturepost/bin/picpost setup

# set up new apache virtual host
cd /etc/httpd/conf.d
ln -s /opt/picturepost/conf/apache/apache.conf picturepost.conf


Build colorMod
======================================
cd /tmp
git clone https://github.com/collinsp/colorMod.git 
cd colorMod
make
cp colorMod /opt/picturepost/bin


Configure Crontabs (ignore on dev systems)
======================================
sudo su
crontab -e
0 0 * * * /usr/bin/webalizer -K 72 -k 72 -o /opt/picturepost/data/webalizer /opt/picturepost/logs/access.log >/dev/null
0 1 * * 0 /opt/picturepost/bin/auto_clean_picturepost_ftp >/dev/null 2>&1
0 2 * * * /opt/picturepost/bin/picpost backup >/dev/null
0 3 * * * /opt/picturepost/bin/picpost maint  >/dev/null
0 5 * * * /opt/picturepost/bin/auto_notify_picturepost_flagged_posts.pl >/dev/null
0,10,20,30,40,50 * * * * /opt/picturepost/bin/auto_notify_picturepost_update.pl >>/web/picturepost/logs/emails.log



Other Developer Instructions
======================================

# the general manage script - run without command line options to see what else it can do
bin/picpost

# anytime you update your repo, make sure you run setup to handle database migrations, and changes to config
bin/picpost setup

# if you make changes to the java files in src/ you need to recompile and redeploy
bin/picpost redeploy

# shortcut to get an sql shell as postgres user
bin/picpost sql

# make sure you create a picturepost account for yourself
bin/picpost manage_user

# to use reCaptcha, go to http://www.google.com/recaptcha and
# generate your keys and put them in the appropriate places.
# if this is a devel site and you don't want recaptcha,
# then leave the key values as "nokey"
vi conf/picturepost.cfg

If you need help email picturepost-dev@sr.unh.edu
